{"version":3,"file":"25_deploy_itc.js","sourceRoot":"","sources":["../../migrations/25_deploy_itc.ts"],"names":[],"mappings":"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","sourcesContent":["import { deployStateMachineSystem, storeIpfsJsonData } from '@settlemint/enteth-migration-utils';\nimport dayjs from 'dayjs';\n\nimport { AdminRoleRegistryContract } from '../types/truffle-contracts/AdminRoleRegistry';\nimport { GateKeeperContract } from '../types/truffle-contracts/GateKeeper';\nimport {\n  ITCFactoryContract,\n  ITCFactoryInstance,\n} from '../types/truffle-contracts/ITCFactory';\nimport { ITCRegistryContract } from '../types/truffle-contracts/ITCRegistry';\n\nimport { TMRoleRegistryContract } from '../types/truffle-contracts/TMRoleRegistry';\nimport { SECRoleRegistryContract } from '../types/truffle-contracts/SECRoleRegistry';\nimport { REPRoleRegistryContract } from '../types/truffle-contracts/REPRoleRegistry';\nimport { WSPRoleRegistryContract } from '../types/truffle-contracts/WSPRoleRegistry';\nimport { BOMRoleRegistryContract } from '../types/truffle-contracts/BOMRoleRegistry';\nimport { FMRoleRegistryContract } from '../types/truffle-contracts/FMRoleRegistry';\n\nconst GateKeeper: GateKeeperContract = artifacts.require('GateKeeper');\nconst ITCRegistry: ITCRegistryContract = artifacts.require('ITCRegistry');\nconst ITCFactory: ITCFactoryContract = artifacts.require('ITCFactory');\nconst AdminRoleRegistry: AdminRoleRegistryContract = artifacts.require('AdminRoleRegistry');\n\nconst TMRoleRegistry: TMRoleRegistryContract = artifacts.require('TMRoleRegistry');\nconst SECRoleRegistry: SECRoleRegistryContract = artifacts.require('SECRoleRegistry');\nconst REPRoleRegistry: REPRoleRegistryContract = artifacts.require('REPRoleRegistry');\nconst WSPRoleRegistry: WSPRoleRegistryContract = artifacts.require('WSPRoleRegistry');\nconst BOMRoleRegistry: BOMRoleRegistryContract = artifacts.require('BOMRoleRegistry');\nconst FMRoleRegistry: FMRoleRegistryContract = artifacts.require('FMRoleRegistry');\n\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { enabledFeatures, storeIpfsHash } = require('../../truffle-config.js'); // two dirs up, because it is compiled into ./dist/migrations\n\nmodule.exports = async (deployer: Truffle.Deployer, network: string, accounts: string[]) => {\n  if (enabledFeatures().includes('ITC')) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const uiDefinitions = require('../../contracts/ITC/UIDefinitions.json');\n\n    const { factory } = await deployStateMachineSystem(\n      deployer,\n      accounts,\n      GateKeeper,\n      ITCRegistry,\n      ITCFactory,\n      [AdminRoleRegistry, TMRoleRegistry, SECRoleRegistry, REPRoleRegistry, WSPRoleRegistry, BOMRoleRegistry, FMRoleRegistry],\n      uiDefinitions,\n      storeIpfsHash\n    );\n\n    const ITCs = [\n      {\n        Invoice: 'ITC-1',\n        price: '12300',\n        quantity: '230 MT',\n        delivery_period: dayjs('2020-08-08').unix(),\n        delivery_place: 'Delhi',\n        quality: 'Best',\n        variety: 'GRAN',\n        mandi_doc: 'QmUF8Ehv5REwdJSE64Cp379vRhnVqH7yxUE67vhxUVmevT',\n        register_in: 'Comments at entry',\n        register_out: 'Comments at exit',\n        warehouse_name: 'Arya Warehouse',\n        vendor_name: 'ITC - Agri Business Division',\n      },\n    ];\n    for (const aitc of ITCs) {\n      await createITC(factory, aitc);\n    }\n  }\n};\n\nasync function createITC(\n  factory: ITCFactoryInstance,\n  ITC: { \n    Invoice: string;\n    price: string;\n    quantity: string;\n    delivery_period: number;\n    delivery_place: string;\n    quality: string;\n    variety: string;\n    mandi_doc: string;\n    register_in: string;\n    register_out: string;\n    warehouse_name: string;\n    vendor_name: string;\n  }\n) {\n  const ipfsHash = await storeIpfsJsonData({\n    price: ITC.price,\n    quantity: ITC.quantity,\n    delivery_period: ITC.delivery_period,\n    delivery_place: ITC.delivery_place,\n    quality: ITC.quality,\n    variety: ITC.variety,\n    mandi_doc: ITC.mandi_doc,\n    register_in: ITC.register_in,\n    register_out: ITC.register_out,\n    warehouse_name: ITC.warehouse_name,\n    vendor_name: ITC.vendor_name,\n  });\n  await factory.create(ITC.Invoice, ipfsHash);\n}\n"]}